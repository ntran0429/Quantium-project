"0","#### calculate Total sales by LIFESTAGE and PREMIUM_CUSTOMER and create a plot"
"0","sales <- data[, .(SALES = sum(TOT_SALES)), .(LIFESTAGE, PREMIUM_CUSTOMER)]"
"0",""
"0","#### Create plot"
"0","p <- ggplot(data = sales) +"
"0","  # weight = SALES means that the size or area of each mosaic tile will be proportional to the corresponding sales value. "
"0","  # product() is used to create a combined factor variable that represents different combinations of PREMIUM_CUSTOMER and LIFESTAGE"
"0","  geom_mosaic(aes(weight = SALES, x = product(PREMIUM_CUSTOMER, LIFESTAGE), fill = PREMIUM_CUSTOMER)) +"
"0","  labs(x = ""Lifestage"", y = ""Premium customer flag"", title = ""Proportion of sales"") +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
"0","  "
"0","# The labels are generated by calculating the proportion of each tile's weight (SALES) "
"0","# relative to the sum of all weights in the plot."
"0","p + geom_text(data = ggplot_build(p)$data[[1]], "
"0","              # ggplot_build(p)$data is a list of layers that contains the data used to create the layers in a ggplot object p."
"0","              aes(x = (xmin + xmax)/2 , # this is to position the text "
"0","                  y = (ymin + ymax)/2,  # in the middle of each tile"
"0","                  label = as.character(paste(round(.wt/sum(.wt),3)*100, '%'))))"
"2","Warning: `unite_()` was deprecated in tidyr 1.2.0.
Please use `unite()` instead."
