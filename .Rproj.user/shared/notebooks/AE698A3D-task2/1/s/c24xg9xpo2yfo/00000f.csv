"0","#### Conduct the analysis on trial store 88."
"0","measureOverTime <- data[, .(totSales = sum(TOT_SALES),"
"0","                            nCustomers = uniqueN(LYLTY_CARD_NBR),"
"0","                            nTxnPerCust = uniqueN(TXN_ID)/uniqueN(LYLTY_CARD_NBR), "
"0","                            nChipsPerCust = sum(PROD_QTY)/uniqueN(LYLTY_CARD_NBR),"
"0","                            avgPricePerUnit = sum(TOT_SALES)/sum(PROD_QTY)), "
"0","                        by = .(STORE_NBR,YEARMONTH)][order(STORE_NBR,YEARMONTH)]"
"0",""
"0","#### Use the functions from earlier to calculate the correlation of the sales and"
"0","# number of customers of each potential control store to the trial store"
"0","trial_store <- 88"
"0","corr_nSales <- calculateCorrelation(inputTable = preTrialMeasures,metricCol = quote(totSales),storeComparison = trial_store)"
"0","corr_nCustomers <- calculateCorrelation(inputTable = preTrialMeasures,metricCol = quote(nCustomers),storeComparison = trial_store)"
"0",""
"0","#### Use the functions from earlier to calculate the magnitude distance of the"
"0","# sales and number of customers of each potential control store to the trial store"
"0","magnitude_nSales <- calculateMagnitudeDistance(preTrialMeasures,quote(totSales),trial_store)"
"0","magnitude_nCustomers <- calculateMagnitudeDistance(preTrialMeasures,quote(nCustomers),trial_store)"
"0",""
"0","#### Create a combined score composed of correlation and magnitude by merging the"
"0","# correlations table and the magnitudes table, for each driver."
"0","corr_weight <- 0.5"
"0","score_nSales <- merge(corr_nSales,magnitude_nSales, by= c(""Store1"",""Store2""))[, scoreNSales := corr_weight * corr_measure + (1-corr_weight) * mag_measure]"
"0","score_nCustomers <- merge(corr_nCustomers,magnitude_nCustomers, by= c(""Store1"",""Store2""))[, scoreNCust := corr_weight * corr_measure + (1-corr_weight) * mag_measure]"
"0",""
"0","#### Combine scores across the drivers by merging sales scores and customer scores,"
"0","# and compute a final combined score."
"0","score_Control <- merge(score_nSales,score_nCustomers, by=c(""Store1"",""Store2""))"
"0","score_Control[, finalControlScore := scoreNSales * 0.5 + scoreNCust * 0.5]"
"0",""
"0","#### Select control stores based on the highest matching store"
"0","#### (closest to 1 but not the store itself, i.e. the second ranked highest store)"
"0","#### Select control store for trial store 88"
"0","control_store <- score_Control[order(-finalControlScore)][2,Store2]"
"0","control_store"
"1","[1]"
"1"," 237"
"1","
"
