"0","#### Calculate these measures over time for each store"
"0","#### Add a new month ID column in the data with the format yyyymm."
"0","# library(lubridate)"
"0","data[, YEARMONTH := format(DATE, ""%Y%m"")]"
"0","# to have 'YEARMONTH' as numeric,"
"0","# data[, YEARMONTH := year(DATE)*100 + month(DATE)]"
"0","# View(data)"
"0",""
"0","#### Next, we define the measure calculations to use during the analysis."
"0","#  For each store and month, calculate total sales, number of customers,"
"0","# transactions per customer, chips per customer and the average price per unit."
"0","# use uniqueN() to count distinct values in a column"
"0","# .N gets number of rows in each group"
"0","measureOverTime <- data[, .(totSales = sum(TOT_SALES),"
"0","                            nCustomers = uniqueN(LYLTY_CARD_NBR),"
"0","                            nTxnPerCust = uniqueN(TXN_ID)/uniqueN(LYLTY_CARD_NBR),"
"0","                            nChipsPerCust = sum(PROD_QTY)/uniqueN(LYLTY_CARD_NBR),"
"0","                            avgPricePerUnit = sum(TOT_SALES)/sum(PROD_QTY)), "
"0","                        by = .(STORE_NBR,YEARMONTH)][order(STORE_NBR,YEARMONTH)]"
"0","# order returns a permutation which rearranges its first argument into"
"0","# ascending or descending order, breaking ties by further arguments."
"0",""
"0","# 'measureOverTime' is a data set of monthly measure for each store"
"0","# each row is a monthly measure for a store"
"0",""
"0",""
"0","#### Select stores with full observation periods, ie. from 201807 to 201906"
"0","# These are the stores in 'measureOverTime' that have all these 12 months on record"
"0","storesWithFullObs <- unique(measureOverTime[, .N, STORE_NBR][N == 12, STORE_NBR])"
"0","# Filter to the pre-trial period"
"0","preTrialMeasures <- measureOverTime[YEARMONTH < 201902 & STORE_NBR %in% storesWithFullObs, ]"
